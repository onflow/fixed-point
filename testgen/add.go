// Code generated by testgen/add.py; DO NOT EDIT.
package fixedPoint

var AddUFix64Tests = []struct{ A, B, Expected uint64 }{
    {0x0000000005F5E100, 0x0000000005F5E100, 0x000000000BEBC200},// 1.0 + 1.0 = 2.0
    {0x0000000005F5E100, 0x0000000000000000, 0x0000000005F5E100},// 1.0 + 0.0 = 1.0
    {0x0000000000000000, 0x0000000000000000, 0x0000000000000000},// 0.0 + 0.0 = 0.0
    {0x0000000000000000, 0x0000000005F5E100, 0x0000000005F5E100},// 0.0 + 1.0 = 1.0
    {0x0000000005F5E100, 0x002386F26FC10000, 0x002386F275B6E100},// 1.0 + 1e8 = 100000001.0
    {0x0000000005F5E100, 0x002386F275B6E100, 0x002386F27BACC200},// 1.0 + 100000001.0 = 100000002.0
    {0x00000002DFDAE800, 0x000000125EE0C480, 0x000000153EBBAC80},// 123.456 + 789.012 = 912.468
    {0x0000000AA2ACB320, 0x00000002DFDAE800, 0x0000000D82879B20},// 456.789 + 123.456 = 580.245
    {0x000000000000300C, 0x000000000000B220, 0x000000000000E22C},// 0.000123 + 0.000456 = 0.000579
    {0x0000000000013434, 0x0000000000007D64, 0x000000000001B198},// 0.000789 + 0.000321 = 0.001110
    {0x000008FB8FD98210, 0x0000011F71FB0450, 0x00000A1B01D48660},// 98765.4321 + 12345.6789 = 111111.1110
    {0x000002DB75839110, 0x00000278E638E760, 0x000005545BBC7870},// 31415.9265 + 27182.8182 = 58598.7447
    {0x00000278E638E760, 0x000002DB75839110, 0x000005545BBC7870},// 27182.8182 + 31415.9265 = 58598.7447
    {0x00000000075BCD15, 0x0000000005E30A78, 0x000000000D3ED78D},// 1.23456789 + 0.98765432 = 2.22222221
    {0x0000000005F5E0FF, 0x0000000000000001, 0x0000000005F5E100},// 0.99999999 + 0.00000001 = 1.00000000
    {0xFFFFFFFFFA0A1EFF, 0x0000000005F5E100, 0xFFFFFFFFFFFFFFFF},// MaxUFix64 - 1.0 + 1.0 = 184467440737.09551615
    {0xFFFFFFFFFF67697F, 0x0000000000989680, 0xFFFFFFFFFFFFFFFF},// MaxUFix64 - 0.1 + 0.1 = 184467440737.09551615
    {0xFFFFFFFFFFF0BDBF, 0x00000000000F4240, 0xFFFFFFFFFFFFFFFF},// MaxUFix64 - 0.01 + 0.01 = 184467440737.09551615
    {0xFFFFFFFFFFFE795F, 0x00000000000186A0, 0xFFFFFFFFFFFFFFFF},// MaxUFix64 - 0.001 + 0.001 = 184467440737.09551615
    {0xFFFFFFFFFFFFD8EF, 0x0000000000002710, 0xFFFFFFFFFFFFFFFF},// MaxUFix64 - 0.0001 + 0.0001 = 184467440737.09551615
    {0xFFFFFFFFFFFFFC17, 0x00000000000003E8, 0xFFFFFFFFFFFFFFFF},// MaxUFix64 - 0.00001 + 0.00001 = 184467440737.09551615
    {0xFFFFFFFFFFFFFF9B, 0x0000000000000064, 0xFFFFFFFFFFFFFFFF},// MaxUFix64 - 0.000001 + 0.000001 = 184467440737.09551615
    {0xFFFFFFFFFFFFFFF5, 0x000000000000000A, 0xFFFFFFFFFFFFFFFF},// MaxUFix64 - 0.0000001 + 0.0000001 = 184467440737.09551615
    {0xFFFFFFFFFFFFFFFE, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF},// MaxUFix64 - 0.00000001 + 0.00000001 = 184467440737.09551615
    {0x7FFFFFFFFFFFFFFF, 0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFE},// HalfMaxUFix64 + HalfMaxUFix64 = 184467440737.09551614
    {0x8000000000000000, 0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF},// HalfMaxUFix64 + 0.00000001 + HalfMaxUFix64 = 184467440737.09551615
    {0x7FFFFFFFFFFFFFFF, 0x8000000000000000, 0xFFFFFFFFFFFFFFFF},// HalfMaxUFix64 + HalfMaxUFix64 + 0.00000001 = 184467440737.09551615
}

var AddUFix64OverflowTests = []struct{ A, B uint64 }{
    {0xFFFFFFFFFFFFFFFF, 0x0000000005F5E100},// MaxUFix64 + 1.0 = overflow
    {0xFFFFFFFFFFFFFFFF, 0x00000000000F4240},// MaxUFix64 + 0.01 = overflow
    {0xFFFFFFFFFFFFFFFF, 0x00000000000186A0},// MaxUFix64 + 0.001 = overflow
    {0xFFFFFFFFFFFFFFFF, 0x00000000000003E8},// MaxUFix64 + 0.00001 = overflow
    {0xFFFFFFFFFFFFFFFF, 0x000000000000000A},// MaxUFix64 + 0.0000001 = overflow
    {0xFFFFFFFFFFFFFFFF, 0x0000000000000001},// MaxUFix64 + 0.00000001 = overflow
    {0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF},// MaxUFix64 + MaxUFix64 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x8000000005F5E0FF},// HalfMaxUFix64 + HalfMaxUFix64 + 1.0 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x800000000098967F},// HalfMaxUFix64 + HalfMaxUFix64 + 0.1 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x80000000000F423F},// HalfMaxUFix64 + HalfMaxUFix64 + 0.01 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x800000000001869F},// HalfMaxUFix64 + HalfMaxUFix64 + 0.001 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x800000000000270F},// HalfMaxUFix64 + HalfMaxUFix64 + 0.0001 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x80000000000003E7},// HalfMaxUFix64 + HalfMaxUFix64 + 0.00001 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x8000000000000063},// HalfMaxUFix64 + HalfMaxUFix64 + 0.000001 = overflow
    {0x8000000000000000, 0x8000000000000000},// HalfMaxUFix64 + 0.00000001 + HalfMaxUFix64 + 0.00000001 = overflow
    {0x8000000000000001, 0x7FFFFFFFFFFFFFFF},// HalfMaxUFix64 + 0.00000002 + HalfMaxUFix64 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x8000000000000001},// HalfMaxUFix64 + HalfMaxUFix64 + 0.00000002 = overflow
}

var AddFix64Tests = []struct{ A, B, Expected uint64 }{
    {0x0000000005F5E100, 0x0000000005F5E100, 0x000000000BEBC200},// 1.0 + 1.0 = 2.0
    {0x0000000005F5E100, 0x0000000000000000, 0x0000000005F5E100},// 1.0 + 0.0 = 1.0
    {0x0000000000000000, 0x0000000000000000, 0x0000000000000000},// 0.0 + 0.0 = 0.0
    {0x0000000000000000, 0x0000000005F5E100, 0x0000000005F5E100},// 0.0 + 1.0 = 1.0
    {0x0000000005F5E100, 0x000000000BEBC200, 0x0000000011E1A300},// 1.0 + 2.0 = 3.0
    {0xFFFFFFFFFA0A1F00, 0x000000000BEBC200, 0x0000000005F5E100},// -1.0 + 2.0 = 1.0
    {0x0000000005F5E100, 0xFFFFFFFFF4143E00, 0xFFFFFFFFFA0A1F00},// 1.0 + -2.0 = -1.0
    {0xFFFFFFFFFA0A1F00, 0xFFFFFFFFF4143E00, 0xFFFFFFFFEE1E5D00},// -1.0 + -2.0 = -3.0
    {0x0000000005F5E100, 0x002386F26FC10000, 0x002386F275B6E100},// 1.0 + 1e8 = 100000001.0
    {0x0000000005F5E100, 0x002386F275B6E100, 0x002386F27BACC200},// 1.0 + 100000001.0 = 100000002.0
    {0x0000000005F5E100, 0x002386F269CB1F00, 0x002386F26FC10000},// 1.0 + 99999999.0 = 100000000.0
    {0x00000002DFDAE800, 0x000000125EE0C480, 0x000000153EBBAC80},// 123.456 + 789.012 = 912.468
    {0xFFFFFFF55D534CE0, 0x00000002DFDAE800, 0xFFFFFFF83D2E34E0},// -456.789 + 123.456 = -333.333
    {0x000000000000300C, 0x000000000000B220, 0x000000000000E22C},// 0.000123 + 0.000456 = 0.000579
    {0xFFFFFFFFFFFECBCC, 0x0000000000007D64, 0xFFFFFFFFFFFF4930},// -0.000789 + 0.000321 = -0.000468
    {0x000008FB8FD98210, 0xFFFFFEE08E04FBB0, 0x000007DC1DDE7DC0},// 98765.4321 + -12345.6789 = 86419.7532
    {0x000002DB75839110, 0x00000278E638E760, 0x000005545BBC7870},// 31415.9265 + 27182.8182 = 58598.7447
    {0xFFFFFD8719C718A0, 0xFFFFFD248A7C6EF0, 0xFFFFFAABA4438790},// -27182.8182 + -31415.9265 = -58598.7447
    {0x00000000075BCD15, 0xFFFFFFFFFA1CF588, 0x000000000178C29D},// 1.23456789 + -0.98765432 = 0.24691357
    {0x0000000005F5E0FF, 0x0000000000000001, 0x0000000005F5E100},// 0.99999999 + 0.00000001 = 1.00000000
    {0xFFFFFFFFFA0A1F01, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFA0A1F00},// -0.99999999 + -0.00000001 = -1.00000000
    {0x7FFFFFFFFA0A1EFF, 0x0000000005F5E100, 0x7FFFFFFFFFFFFFFF},// MaxFix64 - 1.0 + 1.0 = 92233720368.54775807
    {0x7FFFFFFFFF67697F, 0x0000000000989680, 0x7FFFFFFFFFFFFFFF},// MaxFix64 - 0.1 + 0.1 = 92233720368.54775807
    {0x7FFFFFFFFFF0BDBF, 0x00000000000F4240, 0x7FFFFFFFFFFFFFFF},// MaxFix64 - 0.01 + 0.01 = 92233720368.54775807
    {0x7FFFFFFFFFFE795F, 0x00000000000186A0, 0x7FFFFFFFFFFFFFFF},// MaxFix64 - 0.001 + 0.001 = 92233720368.54775807
    {0x7FFFFFFFFFFFD8EF, 0x0000000000002710, 0x7FFFFFFFFFFFFFFF},// MaxFix64 - 0.0001 + 0.0001 = 92233720368.54775807
    {0x7FFFFFFFFFFFFC17, 0x00000000000003E8, 0x7FFFFFFFFFFFFFFF},// MaxFix64 - 0.00001 + 0.00001 = 92233720368.54775807
    {0x7FFFFFFFFFFFFF9B, 0x0000000000000064, 0x7FFFFFFFFFFFFFFF},// MaxFix64 - 0.000001 + 0.000001 = 92233720368.54775807
    {0x7FFFFFFFFFFFFFF5, 0x000000000000000A, 0x7FFFFFFFFFFFFFFF},// MaxFix64 - 0.0000001 + 0.0000001 = 92233720368.54775807
    {0x7FFFFFFFFFFFFFFE, 0x0000000000000001, 0x7FFFFFFFFFFFFFFF},// MaxFix64 - 0.00000001 + 0.00000001 = 92233720368.54775807
    {0x3FFFFFFFFFFFFFFF, 0x3FFFFFFFFFFFFFFF, 0x7FFFFFFFFFFFFFFE},// HalfMaxFix64 + HalfMaxFix64 = 92233720368.54775806
    {0x4000000000000000, 0x3FFFFFFFFFFFFFFF, 0x7FFFFFFFFFFFFFFF},// HalfMaxFix64 + 0.00000001 + HalfMaxFix64 = 92233720368.54775807
    {0x3FFFFFFFFFFFFFFF, 0x4000000000000000, 0x7FFFFFFFFFFFFFFF},// HalfMaxFix64 + HalfMaxFix64 + 0.00000001 = 92233720368.54775807
    {0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFA0A1F00, 0x7FFFFFFFFA0A1EFF},// MaxFix64 + -1.0 = 92233720367.54775807
    {0x7FFFFFFFFFFFFFFF, 0x0000000000000000, 0x7FFFFFFFFFFFFFFF},// MaxFix64 + 0.0 = 92233720368.54775807
    {0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFF676980, 0x7FFFFFFFFF67697F},// MaxFix64 + -0.1 = 92233720368.44775807
    {0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFF0BDC0, 0x7FFFFFFFFFF0BDBF},// MaxFix64 + -0.01 = 92233720368.53775807
    {0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFE7960, 0x7FFFFFFFFFFE795F},// MaxFix64 + -0.001 = 92233720368.54675807
    {0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFD8F0, 0x7FFFFFFFFFFFD8EF},// MaxFix64 + -0.0001 = 92233720368.54765807
    {0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFC18, 0x7FFFFFFFFFFFFC17},// MaxFix64 + -0.00001 = 92233720368.54774807
    {0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFF9C, 0x7FFFFFFFFFFFFF9B},// MaxFix64 + -0.000001 = 92233720368.54775707
    {0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFF6, 0x7FFFFFFFFFFFFFF5},// MaxFix64 + -0.0000001 = 92233720368.54775797
    {0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0x7FFFFFFFFFFFFFFE},// MaxFix64 + -0.00000001 = 92233720368.54775806
    {0x3FFFFFFFFFFFFFFF, 0x3FFFFFFFFFFFFFFF, 0x7FFFFFFFFFFFFFFE},// HalfMaxFix64 + HalfMaxFix64 = 92233720368.54775806
    {0x8000000005F5E100, 0xFFFFFFFFFA0A1F00, 0x8000000000000000},// MinFix64 + 1.0 + -1.0 = -92233720368.54775808
    {0x8000000000989680, 0xFFFFFFFFFF676980, 0x8000000000000000},// MinFix64 + 0.1 + -0.1 = -92233720368.54775808
    {0x80000000000F4240, 0xFFFFFFFFFFF0BDC0, 0x8000000000000000},// MinFix64 + 0.01 + -0.01 = -92233720368.54775808
    {0x80000000000186A0, 0xFFFFFFFFFFFE7960, 0x8000000000000000},// MinFix64 + 0.001 + -0.001 = -92233720368.54775808
    {0x8000000000002710, 0xFFFFFFFFFFFFD8F0, 0x8000000000000000},// MinFix64 + 0.0001 + -0.0001 = -92233720368.54775808
    {0x80000000000003E8, 0xFFFFFFFFFFFFFC18, 0x8000000000000000},// MinFix64 + 0.00001 + -0.00001 = -92233720368.54775808
    {0x8000000000000064, 0xFFFFFFFFFFFFFF9C, 0x8000000000000000},// MinFix64 + 0.000001 + -0.000001 = -92233720368.54775808
    {0x800000000000000A, 0xFFFFFFFFFFFFFFF6, 0x8000000000000000},// MinFix64 + 0.0000001 + -0.0000001 = -92233720368.54775808
    {0x8000000000000001, 0xFFFFFFFFFFFFFFFF, 0x8000000000000000},// MinFix64 + 0.00000001 + -0.00000001 = -92233720368.54775808
    {0x8000000000000000, 0x0000000005F5E100, 0x8000000005F5E100},// MinFix64 + 1.0 = -92233720367.54775808
    {0x8000000000000000, 0x0000000000989680, 0x8000000000989680},// MinFix64 + 0.1 = -92233720368.44775808
    {0x8000000000000000, 0x00000000000F4240, 0x80000000000F4240},// MinFix64 + 0.01 = -92233720368.53775808
    {0x8000000000000000, 0x00000000000186A0, 0x80000000000186A0},// MinFix64 + 0.001 = -92233720368.54675808
    {0x8000000000000000, 0x0000000000002710, 0x8000000000002710},// MinFix64 + 0.0001 = -92233720368.54765808
    {0x8000000000000000, 0x00000000000003E8, 0x80000000000003E8},// MinFix64 + 0.00001 = -92233720368.54774808
    {0x8000000000000000, 0x0000000000000064, 0x8000000000000064},// MinFix64 + 0.000001 = -92233720368.54775708
    {0x8000000000000000, 0x000000000000000A, 0x800000000000000A},// MinFix64 + 0.0000001 = -92233720368.54775798
    {0x8000000000000000, 0x0000000000000001, 0x8000000000000001},// MinFix64 + 0.00000001 = -92233720368.54775807
    {0x0000000000000000, 0x8000000000000000, 0x8000000000000000},// 0 + MinFix64 = -92233720368.54775808
    {0xFFFFFFFFFF676980, 0x8000000000989680, 0x8000000000000000},// -0.1 + MinFix64 + 0.1 = -92233720368.54775808
    {0xFFFFFFFFFFF0BDC0, 0x80000000000F4240, 0x8000000000000000},// -0.01 + MinFix64 + 0.01 = -92233720368.54775808
    {0xFFFFFFFFFFFE7960, 0x80000000000186A0, 0x8000000000000000},// -0.001 + MinFix64 + 0.001 = -92233720368.54775808
    {0xFFFFFFFFFFFFD8F0, 0x8000000000002710, 0x8000000000000000},// -0.0001 + MinFix64 + 0.0001 = -92233720368.54775808
    {0xFFFFFFFFFFFFFC18, 0x80000000000003E8, 0x8000000000000000},// -0.00001 + MinFix64 + 0.00001 = -92233720368.54775808
    {0xFFFFFFFFFFFFFF9C, 0x8000000000000064, 0x8000000000000000},// -0.000001 + MinFix64 + 0.000001 = -92233720368.54775808
    {0xFFFFFFFFFFFFFFF6, 0x800000000000000A, 0x8000000000000000},// -0.0000001 + MinFix64 + 0.0000001 = -92233720368.54775808
    {0xFFFFFFFFFFFFFFFF, 0x8000000000000001, 0x8000000000000000},// -0.00000001 + MinFix64 + 0.00000001 = -92233720368.54775808
    {0xC000000000000000, 0xC000000000000000, 0x8000000000000000},// HalfMinFix64 + HalfMinFix64 = -92233720368.54775808
    {0xC000000000000001, 0xBFFFFFFFFFFFFFFF, 0x8000000000000000},// HalfMinFix64 + 0.00000001 + HalfMinFix64 - 0.00000001 = -92233720368.54775808
}

var AddFix64OverflowTests = []struct{ A, B uint64 }{
    {0x7FFFFFFFFFFFFFFF, 0x0000000005F5E100},// MaxFix64 + 1.0 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x0000000000989680},// MaxFix64 + 0.1 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x00000000000F4240},// MaxFix64 + 0.01 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x00000000000186A0},// MaxFix64 + 0.001 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x0000000000002710},// MaxFix64 + 0.0001 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x00000000000003E8},// MaxFix64 + 0.00001 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x0000000000000064},// MaxFix64 + 0.000001 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x000000000000000A},// MaxFix64 + 0.0000001 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x0000000000000001},// MaxFix64 + 0.00000001 = overflow
    {0x7FFFFFFFFFFFFFFF, 0x7FFFFFFFFFFFFFFF},// MaxFix64 + MaxFix64 = overflow
    {0x3FFFFFFFFFFFFFFF, 0x4000000005F5E0FF},// HalfMaxFix64 + HalfMaxFix64 + 1.0 = overflow
    {0x3FFFFFFFFFFFFFFF, 0x400000000098967F},// HalfMaxFix64 + HalfMaxFix64 + 0.1 = overflow
    {0x3FFFFFFFFFFFFFFF, 0x40000000000F423F},// HalfMaxFix64 + HalfMaxFix64 + 0.01 = overflow
    {0x3FFFFFFFFFFFFFFF, 0x400000000001869F},// HalfMaxFix64 + HalfMaxFix64 + 0.001 = overflow
    {0x3FFFFFFFFFFFFFFF, 0x400000000000270F},// HalfMaxFix64 + HalfMaxFix64 + 0.0001 = overflow
    {0x3FFFFFFFFFFFFFFF, 0x40000000000003E7},// HalfMaxFix64 + HalfMaxFix64 + 0.00001 = overflow
    {0x3FFFFFFFFFFFFFFF, 0x4000000000000063},// HalfMaxFix64 + HalfMaxFix64 + 0.000001 = overflow
    {0x3FFFFFFFFFFFFFFF, 0x4000000000000009},// HalfMaxFix64 + HalfMaxFix64 + 0.0000001 = overflow
    {0x4000000000000000, 0x4000000000000000},// HalfMaxFix64 + 0.00000001 + HalfMaxFix64 + 0.00000001 = overflow
}

var AddFix64NegOverflowTests = []struct{ A, B uint64 }{
    {0x8000000000000000, 0xFFFFFFFFFA0A1F00},// MinFix64 + -1.0 = neg overflow
    {0x8000000000000000, 0xFFFFFFFFFF676980},// MinFix64 + -0.1 = neg overflow
    {0x8000000000000000, 0xFFFFFFFFFFF0BDC0},// MinFix64 + -0.01 = neg overflow
    {0x8000000000000000, 0xFFFFFFFFFFFE7960},// MinFix64 + -0.001 = neg overflow
    {0x8000000000000000, 0xFFFFFFFFFFFFD8F0},// MinFix64 + -0.0001 = neg overflow
    {0x8000000000000000, 0xFFFFFFFFFFFFFC18},// MinFix64 + -0.00001 = neg overflow
    {0x8000000000000000, 0xFFFFFFFFFFFFFF9C},// MinFix64 + -0.000001 = neg overflow
    {0x8000000000000000, 0xFFFFFFFFFFFFFFF6},// MinFix64 + -0.0000001 = neg overflow
    {0x8000000000000000, 0xFFFFFFFFFFFFFFFF},// MinFix64 + -0.00000001 = neg overflow
    {0x8000000000000000, 0x8000000000000000},// MinFix64 + MinFix64 = neg overflow
    {0xC000000000000000, 0xC000000005F5E100},// HalfMinFix64 + HalfMinFix64 + 1.0 = neg overflow
    {0xC000000000000000, 0xC000000000989680},// HalfMinFix64 + HalfMinFix64 + 0.1 = neg overflow
    {0xC000000000000000, 0xC0000000000F4240},// HalfMinFix64 + HalfMinFix64 + 0.01 = neg overflow
    {0xC000000000000000, 0xC0000000000186A0},// HalfMinFix64 + HalfMinFix64 + 0.001 = neg overflow
    {0xC000000000000000, 0xC000000000002710},// HalfMinFix64 + HalfMinFix64 + 0.0001 = neg overflow
    {0xC000000000000000, 0xC0000000000003E8},// HalfMinFix64 + HalfMinFix64 + 0.00001 = neg overflow
    {0xC000000000000000, 0xC000000000000064},// HalfMinFix64 + HalfMinFix64 + 0.000001 = neg overflow
    {0xC000000000000000, 0xC00000000000000A},// HalfMinFix64 + HalfMinFix64 + 0.0000001 = neg overflow
}
